# Generated by Django 5.2.6 on 2025-10-24 15:54

import django.db.models.deletion
import sfd.models.base
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PostcodeUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('municipality_code', models.CharField(blank=True, max_length=10, null=True)),
                ('old_postcode', models.CharField(blank=True, max_length=5, null=True)),
                ('postcode', models.CharField(blank=True, max_length=7, null=True)),
                ('prefecture_name_kana', models.CharField(blank=True, max_length=1000, null=True)),
                ('municipality_name_kana', models.CharField(blank=True, max_length=1000, null=True)),
                ('town_name_kana', models.CharField(blank=True, max_length=1000, null=True)),
                ('prefecture_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('municipality_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('town_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('flag1', models.IntegerField(blank=True, null=True)),
                ('flag2', models.IntegerField(blank=True, null=True)),
                ('flag3', models.IntegerField(blank=True, null=True)),
                ('flag4', models.IntegerField(blank=True, null=True)),
                ('flag5', models.IntegerField(blank=True, null=True)),
                ('flag6', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GroupUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('codename', models.CharField(blank=True, max_length=100, null=True)),
                ('app_label', models.CharField(blank=True, max_length=100, null=True)),
                ('model', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'Group Upload',
                'verbose_name_plural': 'Group Uploads',
                'constraints': [models.UniqueConstraint(fields=('name', 'codename'), name='unique_group_upload')],
            },
        ),
        migrations.CreateModel(
            name='Holiday',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(blank=True, max_length=150, null=True, verbose_name='Created By')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_by', models.CharField(blank=True, max_length=150, null=True, verbose_name='Updated By')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('deleted_flg', models.BooleanField(default=False, verbose_name='Delete Flag')),
                ('date', models.DateField(verbose_name='date')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='name')),
                ('holiday_type', models.CharField(choices=[('National Holiday', 'National Holiday'), ('Substitute Holiday', 'Substitute Holiday'), ('Other Holiday', 'Other Holiday')], default='National Holiday', max_length=20, verbose_name='holiday type')),
                ('comment', models.CharField(blank=True, help_text='Additional information about the holiday', max_length=255, null=True, verbose_name='comment')),
            ],
            options={
                'verbose_name': 'holiday',
                'verbose_name_plural': 'holidays',
                'ordering': ['-date__year', 'date'],
                'constraints': [models.UniqueConstraint(fields=('date',), name='unique_holiday_date')],
            },
        ),
        migrations.CreateModel(
            name='Municipality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(blank=True, max_length=150, null=True, verbose_name='Created By')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_by', models.CharField(blank=True, max_length=150, null=True, verbose_name='Updated By')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('deleted_flg', models.BooleanField(default=False, verbose_name='Delete Flag')),
                ('valid_from', models.DateField(default=sfd.models.base.default_valid_from_date, verbose_name='Valid From')),
                ('valid_to', models.DateField(blank=True, default=sfd.models.base.default_valid_to_date, verbose_name='Valid To')),
                ('municipality_code', models.CharField(max_length=10, verbose_name='Municipality Code')),
                ('municipality_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Municipality Name')),
                ('municipality_name_kana', models.CharField(blank=True, max_length=100, null=True, verbose_name='Municipality Name Kana')),
                ('prefecture_name', models.CharField(max_length=100, verbose_name='Prefecture Name')),
                ('prefecture_name_kana', models.CharField(max_length=100, verbose_name='Prefecture Name Kana')),
            ],
            options={
                'verbose_name': 'Municipality',
                'verbose_name_plural': 'Municipalities',
                'ordering': ['municipality_code', '-valid_from'],
                'constraints': [models.UniqueConstraint(fields=('municipality_code', 'valid_from'), name='unique_municipality_code_valid_from')],
            },
        ),
        migrations.CreateModel(
            name='Postcode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(blank=True, max_length=150, null=True, verbose_name='Created By')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_by', models.CharField(blank=True, max_length=150, null=True, verbose_name='Updated By')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('deleted_flg', models.BooleanField(default=False, verbose_name='Delete Flag')),
                ('postcode', models.CharField(max_length=7, verbose_name='Postcode')),
                ('town_name', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Town Name')),
                ('town_name_kana', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Town Name Kana')),
                ('municipality', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sfd.municipality', verbose_name='Municipality')),
            ],
            options={
                'verbose_name': 'Postcode',
                'verbose_name_plural': 'Postcodes',
                'ordering': ['postcode'],
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(blank=True, max_length=150, null=True, verbose_name='Created By')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_by', models.CharField(blank=True, max_length=150, null=True, verbose_name='Updated By')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('deleted_flg', models.BooleanField(default=False, verbose_name='Delete Flag')),
                ('valid_from', models.DateField(default=sfd.models.base.default_valid_from_date, verbose_name='Valid From')),
                ('valid_to', models.DateField(blank=True, default=sfd.models.base.default_valid_to_date, verbose_name='Valid To')),
                ('family_name', models.CharField(max_length=100, verbose_name='Family Name')),
                ('family_name_kana', models.CharField(max_length=100, verbose_name='Family Name Kana')),
                ('family_name_romaji', models.CharField(blank=True, max_length=100, null=True, verbose_name='Family Name Romaji')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('name_kana', models.CharField(max_length=100, verbose_name='Name Kana')),
                ('name_romaji', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name Romaji')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Birthday')),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=10, null=True, verbose_name='Gender')),
                ('email', models.EmailField(blank=True, max_length=100, null=True, verbose_name='Email')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Phone Number')),
                ('mobile_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Mobile Number')),
                ('address_detail', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address Detail')),
                ('municipality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sfd.municipality', verbose_name='Municipality')),
                ('postcode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sfd.postcode', verbose_name='Postcode')),
            ],
            options={
                'verbose_name': 'Person',
                'verbose_name_plural': 'People',
                'ordering': ['family_name', 'name', 'valid_from'],
            },
        ),
        migrations.CreateModel(
            name='UserUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=150)),
                ('first_name', models.CharField(blank=True, max_length=150, null=True)),
                ('last_name', models.CharField(blank=True, max_length=150, null=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('group_name', models.CharField(blank=True, max_length=500, null=True)),
                ('codename', models.CharField(blank=True, max_length=100, null=True)),
                ('app_label', models.CharField(blank=True, max_length=100, null=True)),
                ('model', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'User Upload',
                'verbose_name_plural': 'User Uploads',
                'constraints': [models.UniqueConstraint(fields=('username', 'codename', 'group_name'), name='unique_user_upload')],
            },
        ),
        migrations.AddConstraint(
            model_name='postcode',
            constraint=models.UniqueConstraint(fields=('postcode', 'municipality', 'town_name', 'town_name_kana'), name='unique_postcode_postcode_town_name'),
        ),
    ]
